<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>I Miei Appuntamenti - HairPlan</title>
    {{!-- <link rel="stylesheet" href="/static/css/style.css"> --}}
    <style>
        /* Stili Generali (simili a home/login) */
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            margin: 0;
            background-color: #f8f9fa; /* Sfondo grigio chiaro */
            color: #343a40;
            line-height: 1.6;
        }
        .container {
            max-width: 960px; /* Larghezza standard */
            margin: 30px auto;
            padding: 30px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.07);
        }
        h1 {
            text-align: center;
            color: #343a40;
            margin-bottom: 35px; /* Più spazio sotto il titolo */
            font-weight: 600;
            font-size: 1.8em;
        }

        /* Info Utente e Logout (Coerente) */
        .user-info {
             position: absolute;
             top: 15px;
             right: 15px;
             background-color: #e9ecef;
             padding: 10px 15px;
             border-radius: 5px;
             box-shadow: 0 1px 3px rgba(0,0,0,0.1);
             font-size: 0.95em;
             z-index: 10;
         }
         .user-info strong { color: #0056b3; }
         .user-info p { margin: 0 0 5px 0; color: #495057; }
         .logout-btn {
             display: inline-block;
             padding: 6px 10px;
             background-color: #dc3545; /* Rosso */
             color: white;
             text-decoration: none;
             border: none;
             border-radius: 4px;
             cursor: pointer;
             font-size: 0.9em;
             transition: background-color 0.2s ease;
             text-align: center;
         }
         .logout-btn:hover { background-color: #c82333; }

        /* Lista Appuntamenti (Stile Card Pulito) */
        .appointment-list {
            list-style: none;
            padding: 0;
            margin-top: 20px;
        }
        .appointment-item {
            background-color: #ffffff;
            border: 1px solid #dee2e6; /* Bordo grigio chiaro */
            border-radius: 6px;
            padding: 20px 25px; /* Più padding */
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            transition: box-shadow 0.2s ease, border-color 0.2s ease, opacity 0.3s ease;
        }
        .appointment-item:hover {
             box-shadow: 0 4px 8px rgba(0,0,0,0.05); /* Ombra leggera hover */
             border-left: 4px solid #007bff; /* Bordo blu a sinistra hover */
             padding-left: 21px; /* Compensa il bordo */
        }
        .appointment-item.deleting { /* Stile durante cancellazione */
            opacity: 0.4;
            pointer-events: none;
            background-color: #f8d7da; /* Sfondo rosso chiaro */
            border-color: #f5c6cb;
            border-left: 4px solid #dc3545; /* Bordo rosso */
             padding-left: 21px;
        }
        .appointment-details {
            flex-grow: 1;
            margin-right: 20px; /* Più spazio dal bottone */
        }
        .appointment-details span {
            display: block;
            margin-bottom: 8px;
            color: #495057; /* Grigio scuro per dettagli */
            font-size: 1em; /* Dimensione testo standard */
        }
        .appointment-details span:last-child { margin-bottom: 0; }
        .appointment-details strong {
            color: #343a40; /* Nero per etichette */
            min-width: 95px; /* Allineamento */
            display: inline-block;
            font-weight: 600; /* Leggermente più bold */
        }

        /* Bottone Cancella (Stile Coerente) */
         .delete-btn {
            padding: 9px 16px; /* Padding bottone */
            background-color: #dc3545; /* Rosso */
            color: white;
            border: none;
            border-radius: 4px; /* Stesso radius di logout */
            cursor: pointer;
            font-size: 0.95em;
            font-weight: 500;
            transition: background-color 0.2s ease, transform 0.1s ease;
            flex-shrink: 0;
            line-height: 1.2; /* Migliore altezza testo */
         }
         .delete-btn:hover {
            background-color: #c82333; /* Rosso scuro hover */
         }
         .delete-btn:active {
             transform: scale(0.97); /* Effetto click leggermente più pronunciato */
         }
         .delete-btn:disabled {
             background-color: #cccccc;
             cursor: not-allowed;
         }

         /* Messaggio Nessun Appuntamento */
         .no-appointments {
            text-align: center;
            color: #6c757d; /* Grigio */
            font-style: italic;
            margin-top: 40px;
            font-size: 1.1em;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 6px;
         }

         /* Media query per responsività */
         @media (max-width: 768px) {
             .container { margin: 15px; padding: 20px; }
             h1 { font-size: 1.6em; }
             .user-info {
                 position: static;
                 margin-bottom: 25px;
                 text-align: center;
                 background-color: transparent;
                 box-shadow: none;
                 padding: 0;
             }
            .appointment-item {
                flex-direction: column;
                align-items: flex-start;
                border-left: none; /* Rimuovi bordo hover su mobile */
                padding-left: 25px;
            }
             .appointment-item:hover { border-left: none; padding-left: 25px; }
             .appointment-item.deleting { border-left: none; padding-left: 25px; }
             .appointment-details {
                 margin-right: 0;
                 margin-bottom: 15px;
                 width: 100%;
             }
            .delete-btn {
                width: 100%;
                text-align: center;
                padding: 12px;
            }
         }
    </style>
</head>
<body>
    <div class="user-info">
        <p>Parrucchiere: <strong>{{name}}</strong> ({{role}})</p>
        <a href="/logout" class="logout-btn">Logout</a>
    </div>

    <div class="container">
        <h1>I Miei Appuntamenti</h1>

        {{#if appuntamenti.length}}
            <ul class="appointment-list" id="appointment-list">
                {{#each appuntamenti}}
                <li class="appointment-item" id="appointment-{{this.id}}">
                    <div class="appointment-details">
                        <span><strong>Data:</strong> {{formatDate this.giorno}}</span>
                        <span><strong>Ora:</strong> {{this.ora}}</span>
                        <span><strong>Utente:</strong> {{this.utente}}</span>
                        {{#if this.descrizione}}
                        <span><strong>Nota:</strong> {{this.descrizione}}</span>
                        {{/if}}
                    </div>
                    <button class="delete-btn" data-id="{{this.id}}" title="Cancella questo appuntamento">Cancella</button>
                </li>
                {{/each}}
            </ul>
        {{else}}
            <p class="no-appointments">Nessun appuntamento in programma.</p>
        {{/if}}

    </div>

    {{!-- Script JS (invariato rispetto a prima, ma lo includo per completezza) --}}
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const hairdresserUsername = '{{username}}';
        const appointmentList = document.getElementById('appointment-list');

        async function handleDelete(appointmentId, buttonElement) {
            if (!appointmentId) { console.error("ID appuntamento mancante."); return; }
            if (confirm("Sei sicuro di voler cancellare definitivamente questo appuntamento?")) {
                buttonElement.disabled = true;
                const listItem = document.getElementById(`appointment-${appointmentId}`);
                if (listItem) listItem.classList.add('deleting');
                try {
                    console.log(`Invio richiesta DELETE per ID: ${appointmentId}`);
                    const response = await fetch(`/api/parrucchiere/appuntamenti/${appointmentId}`, { method: 'DELETE', headers: { 'Accept': 'application/json' } });
                    const result = await response.json();
                    if (!response.ok || !result.success) throw new Error(result.message || `Errore ${response.status}`);
                    console.log('Appuntamento cancellato con successo (ID:', appointmentId, '). In attesa di aggiornamento via Socket.io.');
                } catch (error) {
                    console.error('Errore durante la richiesta di cancellazione:', error);
                    alert(`Impossibile cancellare l'appuntamento: ${error.message}`);
                    buttonElement.disabled = false;
                    if (listItem) listItem.classList.remove('deleting');
                }
            } else { console.log("Cancellazione annullata dall'utente."); }
        }

        if (appointmentList) {
            appointmentList.addEventListener('click', (event) => {
                if (event.target && event.target.classList.contains('delete-btn') && !event.target.disabled) {
                    const id = event.target.getAttribute('data-id');
                    handleDelete(id, event.target);
                }
            });
        } else { console.log("Nessuna lista appuntamenti trovata (id='appointment-list')."); }

        const socket = io();
        socket.on('connect', () => { console.log(`PARRUCCHIERE (${hairdresserUsername}): Socket.io connesso.`); });
        socket.on('disconnect', (reason) => { console.warn(`PARRUCCHIERE (${hairdresserUsername}): Socket.io disconnesso. Causa: ${reason}`); });
        socket.on('connect_error', (err) => { console.error(`PARRUCCHIERE (${hairdresserUsername}): Errore connessione Socket.io:`, err); });
        socket.on('appointmentUpdated', (data) => {
            console.log(`PARRUCCHIERE (${hairdresserUsername}): Ricevuto evento 'appointmentUpdated'. Dati:`, data);
            if (data && data.parrucchiere === hairdresserUsername) {
                console.log(`PARRUCCHIERE (${hairdresserUsername}): Aggiornamento rilevante. Ricarico la pagina...`);
                location.reload(true);
            } else { console.log(`PARRUCCHIERE (${hairdresserUsername}): Aggiornamento non rilevante.`); }
        });
    </script>
</body>
</html>